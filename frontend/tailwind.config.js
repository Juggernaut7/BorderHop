/** @type {import('tailwindcss').Config} */
export default {
  content: [
    "./index.html",
    "./src/**/*.{js,ts,jsx,tsx}",
  ],
  darkMode: 'class',
  theme: {
    extend: {
      colors: {
        primary: {
          50: 'rgb(var(--color-primary) / 0.05)',
          100: 'rgb(var(--color-primary) / 0.1)',
          200: 'rgb(var(--color-primary) / 0.2)',
          300: 'rgb(var(--color-primary) / 0.3)',
          400: 'rgb(var(--color-primary) / 0.4)',
          500: 'rgb(var(--color-primary))',
          600: 'rgb(var(--color-primary) / 0.8)',
          700: 'rgb(var(--color-primary) / 0.7)',
          800: 'rgb(var(--color-primary) / 0.6)',
          900: 'rgb(var(--color-primary) / 0.5)',
        },
        secondary: {
          50: 'rgb(var(--color-secondary) / 0.05)',
          100: 'rgb(var(--color-secondary) / 0.1)',
          200: 'rgb(var(--color-secondary) / 0.2)',
          300: 'rgb(var(--color-secondary) / 0.3)',
          400: 'rgb(var(--color-secondary) / 0.4)',
          500: 'rgb(var(--color-secondary))',
          600: 'rgb(var(--color-secondary) / 0.8)',
          700: 'rgb(var(--color-secondary) / 0.7)',
          800: 'rgb(var(--color-secondary) / 0.6)',
          900: 'rgb(var(--color-secondary) / 0.5)',
        },
        accent: {
          50: 'rgb(var(--color-accent) / 0.05)',
          100: 'rgb(var(--color-accent) / 0.1)',
          200: 'rgb(var(--color-accent) / 0.2)',
          300: 'rgb(var(--color-accent) / 0.3)',
          400: 'rgb(var(--color-accent) / 0.4)',
          500: 'rgb(var(--color-accent))',
          600: 'rgb(var(--color-accent) / 0.8)',
          700: 'rgb(var(--color-accent) / 0.7)',
          800: 'rgb(var(--color-accent) / 0.6)',
          900: 'rgb(var(--color-accent) / 0.5)',
        },
        success: {
          50: 'rgb(var(--color-success) / 0.05)',
          100: 'rgb(var(--color-success) / 0.1)',
          200: 'rgb(var(--color-success) / 0.2)',
          300: 'rgb(var(--color-success) / 0.3)',
          400: 'rgb(var(--color-success) / 0.4)',
          500: 'rgb(var(--color-success))',
          600: 'rgb(var(--color-success) / 0.8)',
          700: 'rgb(var(--color-success) / 0.7)',
          800: 'rgb(var(--color-success) / 0.6)',
          900: 'rgb(var(--color-success) / 0.5)',
        },
        warning: {
          50: 'rgb(var(--color-warning) / 0.05)',
          100: 'rgb(var(--color-warning) / 0.1)',
          200: 'rgb(var(--color-warning) / 0.2)',
          300: 'rgb(var(--color-warning) / 0.3)',
          400: 'rgb(var(--color-warning) / 0.4)',
          500: 'rgb(var(--color-warning))',
          600: 'rgb(var(--color-warning) / 0.8)',
          700: 'rgb(var(--color-warning) / 0.7)',
          800: 'rgb(var(--color-warning) / 0.6)',
          900: 'rgb(var(--color-warning) / 0.5)',
        },
        error: {
          50: 'rgb(var(--color-error) / 0.05)',
          100: 'rgb(var(--color-error) / 0.1)',
          200: 'rgb(var(--color-error) / 0.2)',
          300: 'rgb(var(--color-error) / 0.3)',
          400: 'rgb(var(--color-error) / 0.4)',
          500: 'rgb(var(--color-error))',
          600: 'rgb(var(--color-error) / 0.8)',
          700: 'rgb(var(--color-error) / 0.7)',
          800: 'rgb(var(--color-error) / 0.6)',
          900: 'rgb(var(--color-error) / 0.5)',
        },
        background: 'rgb(var(--color-background))',
        surface: 'rgb(var(--color-surface))',
        'surface-elevated': 'rgb(var(--color-surface-elevated))',
        'surface-hover': 'rgb(var(--color-surface-hover))',
        text: 'rgb(var(--color-text))',
        'text-secondary': 'rgb(var(--color-text-secondary))',
        'text-tertiary': 'rgb(var(--color-text-tertiary))',
        'text-inverse': 'rgb(var(--color-text-inverse))',
        border: 'rgb(var(--color-border))',
        'border-strong': 'rgb(var(--color-border-strong))',
        'border-focus': 'rgb(var(--color-border-focus))',
        // Special chain colors
        circle: 'rgb(var(--color-circle))',
        ethereum: 'rgb(var(--color-ethereum))',
        base: 'rgb(var(--color-base))',
        arbitrum: 'rgb(var(--color-arbitrum))',
      },
      fontFamily: {
        sans: ['Inter', 'system-ui', '-apple-system', 'BlinkMacSystemFont', 'Segoe UI', 'Roboto', 'sans-serif'],
        mono: ['JetBrains Mono', 'Fira Code', 'Consolas', 'Monaco', 'monospace'],
      },
      fontSize: {
        'xs': ['0.75rem', { lineHeight: '1rem' }],
        'sm': ['0.875rem', { lineHeight: '1.25rem' }],
        'base': ['1rem', { lineHeight: '1.5rem' }],
        'lg': ['1.125rem', { lineHeight: '1.75rem' }],
        'xl': ['1.25rem', { lineHeight: '1.75rem' }],
        '2xl': ['1.5rem', { lineHeight: '2rem' }],
        '3xl': ['1.875rem', { lineHeight: '2.25rem' }],
        '4xl': ['2.25rem', { lineHeight: '2.5rem' }],
        '5xl': ['3rem', { lineHeight: '1' }],
        '6xl': ['3.75rem', { lineHeight: '1' }],
        '7xl': ['4.5rem', { lineHeight: '1' }],
        '8xl': ['6rem', { lineHeight: '1' }],
        '9xl': ['8rem', { lineHeight: '1' }],
      },
      spacing: {
        '18': '4.5rem',
        '88': '22rem',
        '128': '32rem',
      },
      borderRadius: {
        '4xl': '2rem',
        '5xl': '2.5rem',
      },
      animation: {
        'float': 'float 6s ease-in-out infinite',
        'glow': 'glow 2s ease-in-out infinite alternate',
        'gradient-xy': 'gradient-xy 15s ease infinite',
        'particle-float': 'particle-float 8s ease-in-out infinite',
        'shimmer': 'shimmer 2s infinite',
        'pulse-glow': 'pulse-glow 2s ease-in-out infinite alternate',
        'bounce-slow': 'bounce 3s infinite',
        'spin-slow': 'spin 3s linear infinite',
        'fade-in': 'fadeIn 0.5s ease-out',
        'slide-up': 'slideUp 0.3s ease-out',
        'scale-in': 'scaleIn 0.2s ease-out',
      },
      keyframes: {
        float: {
          '0%, 100%': { transform: 'translateY(0px)' },
          '50%': { transform: 'translateY(-20px)' },
        },
        glow: {
          '0%': { boxShadow: '0 0 20px rgba(var(--color-primary), 0.3)' },
          '100%': { boxShadow: '0 0 30px rgba(var(--color-primary), 0.6)' },
        },
        'gradient-xy': {
          '0%, 100%': { backgroundPosition: '0% 0%' },
          '25%': { backgroundPosition: '100% 0%' },
          '50%': { backgroundPosition: '100% 100%' },
          '75%': { backgroundPosition: '0% 100%' },
        },
        'particle-float': {
          '0%, 100%': { transform: 'translateY(0px) rotate(0deg)', opacity: '0.3' },
          '50%': { transform: 'translateY(-30px) rotate(180deg)', opacity: '0.8' },
        },
        shimmer: {
          '0%': { backgroundPosition: '-200% 0' },
          '100%': { backgroundPosition: '200% 0' },
        },
        'pulse-glow': {
          '0%': { boxShadow: '0 0 20px rgba(var(--color-primary), 0.3)' },
          '100%': { boxShadow: '0 0 40px rgba(var(--color-primary), 0.6)' },
        },
        fadeIn: {
          '0%': { opacity: '0' },
          '100%': { opacity: '1' },
        },
        slideUp: {
          '0%': { opacity: '0', transform: 'translateY(10px)' },
          '100%': { opacity: '1', transform: 'translateY(0)' },
        },
        scaleIn: {
          '0%': { opacity: '0', transform: 'scale(0.95)' },
          '100%': { opacity: '1', transform: 'scale(1)' },
        },
      },
      backdropBlur: {
        xs: '2px',
      },
      boxShadow: {
        'glow': '0 0 20px rgba(var(--color-primary), 0.3)',
        'glow-lg': '0 0 40px rgba(var(--color-primary), 0.6)',
        'inner-glow': 'inset 0 0 20px rgba(var(--color-primary), 0.1)',
      },
      backgroundImage: {
        'gradient-radial': 'radial-gradient(var(--tw-gradient-stops))',
        'gradient-conic': 'conic-gradient(from 180deg at 50% 50%, var(--tw-gradient-stops))',
        'gradient-mesh': 'linear-gradient(45deg, transparent 30%, rgba(var(--color-primary), 0.1) 50%, transparent 70%)',
      },
      transitionProperty: {
        'height': 'height',
        'spacing': 'margin, padding',
      },
    },
  },
  plugins: [
    require('@tailwindcss/forms'),
  ],
} 